---
import Table from "@/components/data-table";

import {
  createTemporaryDirectory,
  processPageType,
  data_dashboards_result,
} from "@/api/nexus";
import Layout from "@/layouts/result-layout.astro";
import { getPageTitleMapping } from "@/lib/shared";

export async function getStaticPaths() {
  const pages: Array<{
    ws: string;
    type: string;
    columns: Array<{
      id: string;
      key: string;
      name: string;
      enableSorting: boolean;
      enableHiding: boolean;
    }>;
    rows: any[];
  }> = [];
  const [analysis_results, configurations, input_data, notebooks] =
    data_dashboards_result;
  const data = {
    analysis_results,
    configurations,
    input_data,
    notebooks,
  };

  const _path = `${process.cwd()}/public/artifacts`;
  const path = await createTemporaryDirectory(_path);
  const resource_folder = `${process.cwd()}/public/resources`;

  for (const k of Object.keys(data)) {
    const final_data: any[] = [];
    const res_path = await createTemporaryDirectory(
      `${resource_folder}/${k}`
    );
    const dash = data[k as keyof typeof data];
    try {
      await processPageType(
        dash,
        path,
        res_path,
        final_data,
        pages,
        k,
        "data"
      );
    } catch (error) {
      console.error("[error][data]", error);
    }
  }

  const all = pages.map(({ ws, type, columns, rows }) => ({
    params: { ws, type },
    props: { rows, columns },
  }));
  return all;
}

const { ws, type } = Astro.params;
const { columns, rows } = Astro.props;

const tile = getPageTitleMapping(ws, type);
---

<Layout title={tile}>
  <div class="m-10">
    <Table data={rows} columns={columns} isSelectable={false} client:load />
  </div>
</Layout>
